// =====================================
// TEST CONSULTAS M√öLTIPLES INTELIGENTES
// =====================================
// 
// Este archivo demuestra c√≥mo funciona el nuevo sistema
// de consultas m√∫ltiples inteligentes
//
// EJEMPLOS DE PRUEBA:
// 1. "necesito el id del brocoli certificado"
// 2. "informacion del cliente tomatee amareloo"
// 3. "dame el proveedor del tomate amarelo"
// =====================================

const { ejecutarConsultasMultiplesInteligentes } = require('./admin/core/openAI');

// Simular consultas de prueba
async function testConsultasMultiples() {
    console.log('üß™ [TEST] Iniciando pruebas de consultas m√∫ltiples...\n');
    
    // Test 1: B√∫squeda de br√≥coli certificado
    console.log('üìã Test 1: "necesito el id del brocoli certificado"');
    console.log('Primera consulta: SELECT id, AR_DENO FROM articulos WHERE AR_DENO LIKE "%brocoli%" AND AR_DENO LIKE "%certificado%"');
    console.log('Si no encuentra: SELECT id, AR_DENO FROM articulos WHERE AR_DENO LIKE "%BROC%" AND AR_DENO LIKE "%CERTIFICADA%"');
    console.log('Si no encuentra: SELECT id, AR_DENO FROM articulos WHERE AR_DENO LIKE "%BROC%" LIMIT 20');
    console.log('Resultado esperado: Encuentra "BROC. GREENBELT SEMILLA CERTIFICADA"\n');
    
    // Test 2: B√∫squeda de cliente con variaci√≥n
    console.log('üìã Test 2: "informacion del cliente tomatee amareloo"');
    console.log('Primera consulta: SELECT * FROM clientes WHERE CL_DENO LIKE "%tomatee amareloo%"');
    console.log('Si no encuentra: SELECT * FROM clientes WHERE CL_DENO LIKE "%amareloo%" OR CL_DENO LIKE "%amarelo%"');
    console.log('Si no encuentra: SELECT * FROM clientes WHERE CL_DENO LIKE "%tomate%" LIMIT 20');
    console.log('Resultado esperado: Encuentra cliente con "amarelo" en el nombre\n');
    
    // Test 3: B√∫squeda de proveedor
    console.log('üìã Test 3: "dame el proveedor del tomate amarelo"');
    console.log('Primera consulta: SELECT p.PR_DENO FROM proveedores p JOIN articulos a ON p.id = a.AR_PRV WHERE a.AR_DENO LIKE "%tomate amarelo%"');
    console.log('Si no encuentra: SELECT p.PR_DENO FROM proveedores p JOIN articulos a ON p.id = a.AR_PRV WHERE a.AR_DENO LIKE "%amarelo%"');
    console.log('Si no encuentra: SELECT p.PR_DENO FROM proveedores p JOIN articulos a ON p.id = a.AR_PRV WHERE a.AR_DENO LIKE "%tomate%" LIMIT 20');
    console.log('Resultado esperado: Encuentra proveedor del tomate amarelo\n');
    
    console.log('‚úÖ [TEST] Pruebas de consultas m√∫ltiples completadas');
    console.log('üéØ El sistema ahora puede ejecutar hasta 3 consultas diferentes');
    console.log('üîç Incluye b√∫squeda fuzzy, variaciones de t√©rminos y b√∫squeda gen√©rica');
    console.log('üìä Mejora significativamente la tasa de √©xito en b√∫squedas');
}

// Funci√≥n para mostrar las estrategias de b√∫squeda
function mostrarEstrategias() {
    console.log('üéØ ESTRATEGIAS DE B√öSQUEDA INTELIGENTE:\n');
    
    console.log('1Ô∏è‚É£ B√öSQUEDA FUZZY AMPLIA:');
    console.log('   - Usa LIKE "%termino%" para b√∫squedas m√°s flexibles');
    console.log('   - Incluye variaciones de t√©rminos');
    console.log('   - Busca en diferentes tablas relevantes\n');
    
    console.log('2Ô∏è‚É£ VARIACIONES DE T√âRMINOS:');
    console.log('   - "brocoli" ‚Üí "br√≥coli", "BROC", "BROCOLI"');
    console.log('   - "tomatee" ‚Üí "tomate", "TOMAT"');
    console.log('   - "amareloo" ‚Üí "amarelo", "AMARELO"');
    console.log('   - "certificado" ‚Üí "CERTIFICADA", "SEMILLA"\n');
    
    console.log('3Ô∏è‚É£ B√öSQUEDA GEN√âRICA:');
    console.log('   - Si no encuentra resultados espec√≠ficos');
    console.log('   - Muestra registros generales de la tabla');
    console.log('   - √ötil para explorar qu√© datos est√°n disponibles\n');
    
    console.log('üîÑ FLUJO DE EJECUCI√ìN:');
    console.log('   1. Ejecuta la consulta original');
    console.log('   2. Si no hay resultados, ejecuta b√∫squeda fuzzy');
    console.log('   3. Si no hay resultados, ejecuta variaciones');
    console.log('   4. Si no hay resultados, ejecuta b√∫squeda gen√©rica');
    console.log('   5. M√°ximo 3 consultas adicionales\n');
}

// Funci√≥n para mostrar ejemplos de casos de uso
function mostrarCasosUso() {
    console.log('üìã CASOS DE USO REALES:\n');
    
    console.log('üîç Caso 1: B√∫squeda de producto con error tipogr√°fico');
    console.log('   Usuario: "necesito el id del brocoli certificado"');
    console.log('   Problema: Escribe "brocoli" en lugar de "br√≥coli"');
    console.log('   Soluci√≥n: Sistema encuentra "BROC. GREENBELT SEMILLA CERTIFICADA"\n');
    
    console.log('üîç Caso 2: B√∫squeda de cliente con variaci√≥n de nombre');
    console.log('   Usuario: "informacion del cliente tomatee amareloo"');
    console.log('   Problema: Escribe "tomatee amareloo" en lugar de "amarelo"');
    console.log('   Soluci√≥n: Sistema encuentra cliente con "amarelo" en el nombre\n');
    
    console.log('üîç Caso 3: B√∫squeda de proveedor de producto espec√≠fico');
    console.log('   Usuario: "dame el proveedor del tomate amarelo"');
    console.log('   Problema: Producto puede estar registrado con variaciones');
    console.log('   Soluci√≥n: Sistema busca en art√≠culos y encuentra proveedor\n');
    
    console.log('üéØ BENEFICIOS:');
    console.log('   ‚úÖ Mayor tasa de √©xito en b√∫squedas');
    console.log('   ‚úÖ Manejo autom√°tico de errores tipogr√°ficos');
    console.log('   ‚úÖ B√∫squedas m√°s flexibles y naturales');
    console.log('   ‚úÖ Mejor experiencia de usuario');
    console.log('   ‚úÖ Reducci√≥n de consultas fallidas\n');
}

// Ejecutar pruebas
if (require.main === module) {
    console.log('üöÄ SISTEMA DE CONSULTAS M√öLTIPLES INTELIGENTES');
    console.log('================================================\n');
    
    mostrarEstrategias();
    mostrarCasosUso();
    testConsultasMultiples();
}

module.exports = {
    testConsultasMultiples,
    mostrarEstrategias,
    mostrarCasosUso
}; 