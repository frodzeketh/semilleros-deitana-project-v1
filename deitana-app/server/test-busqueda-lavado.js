// =====================================
// TEST: B√öSQUEDA ESPEC√çFICA DE LAVADO Y DESINFECCI√ìN
// =====================================

const ragInteligente = require('./admin/core/ragInteligente');

async function testBusquedaLavado() {
    console.log('üß™ [TEST] === TESTEANDO B√öSQUEDA DE LAVADO Y DESINFECCI√ìN ===');
    
    try {
        // 1. Probar consultas espec√≠ficas sobre lavado
        const consultas = [
            "¬øCada cu√°ntas bandejas se cambia el agua?",
            "lavado de bandejas",
            "desinfecci√≥n de bandejas",
            "frecuencia de cambio de agua",
            "9000 bandejas",
            "Sector Lavado y Desinfecci√≥n"
        ];
        
        for (const consulta of consultas) {
            console.log(`\nüìù [TEST] Consulta: "${consulta}"`);
            
            const resultadoRAG = await ragInteligente.recuperarConocimientoRelevante(consulta, 'test-lavado');
            
            // Verificar si contiene la informaci√≥n espec√≠fica
            const contiene9000 = resultadoRAG.includes('9000');
            const contieneCambioAgua = resultadoRAG.toLowerCase().includes('cambio de agua');
            const contieneLavado = resultadoRAG.toLowerCase().includes('lavado');
            const contieneDesinfeccion = resultadoRAG.toLowerCase().includes('desinfecci√≥n');
            
            console.log(`üîç [TEST] An√°lisis:`);
            console.log(`‚Ä¢ Contiene "9000": ${contiene9000 ? 'S√ç' : 'NO'}`);
            console.log(`‚Ä¢ Contiene "cambio de agua": ${contieneCambioAgua ? 'S√ç' : 'NO'}`);
            console.log(`‚Ä¢ Contiene "lavado": ${contieneLavado ? 'S√ç' : 'NO'}`);
            console.log(`‚Ä¢ Contiene "desinfecci√≥n": ${contieneDesinfeccion ? 'S√ç' : 'NO'}`);
            
            if (contiene9000 && contieneCambioAgua) {
                console.log('‚úÖ [TEST] ¬°√âXITO! Encontrada informaci√≥n espec√≠fica');
                console.log('üìÑ [TEST] Fragmento relevante:');
                const lineas = resultadoRAG.split('\n');
                const lineasRelevantes = lineas.filter(linea => 
                    linea.includes('9000') || 
                    linea.toLowerCase().includes('cambio de agua')
                );
                lineasRelevantes.forEach(linea => console.log(`   ${linea}`));
                break;
            } else {
                console.log('‚ùå [TEST] No se encontr√≥ informaci√≥n espec√≠fica');
                
                // Mostrar las primeras l√≠neas del resultado para debug
                const primerasLineas = resultadoRAG.split('\n').slice(0, 5);
                console.log('üìÑ [TEST] Primeras l√≠neas del resultado:');
                primerasLineas.forEach(linea => console.log(`   ${linea}`));
            }
        }
        
        // 2. Probar b√∫squeda vectorial directa con t√©rminos espec√≠ficos
        console.log('\nüîç [TEST] Probando b√∫squeda vectorial con t√©rminos espec√≠ficos...');
        
        const consultaEspecifica = "lavado desinfecci√≥n bandejas 9000 cambio agua";
        const resultadoVectorial = await ragInteligente.buscarVectorial(consultaEspecifica);
        
        console.log('\nüìä [TEST] Resultado de b√∫squeda vectorial espec√≠fica:');
        console.log(resultadoVectorial.substring(0, 800) + (resultadoVectorial.length > 800 ? '...' : ''));
        
        const vectorialContiene9000 = resultadoVectorial.includes('9000');
        const vectorialContieneCambioAgua = resultadoVectorial.toLowerCase().includes('cambio de agua');
        
        console.log(`\nüîç [TEST] An√°lisis de b√∫squeda vectorial espec√≠fica:`);
        console.log(`‚Ä¢ Contiene "9000": ${vectorialContiene9000 ? 'S√ç' : 'NO'}`);
        console.log(`‚Ä¢ Contiene "cambio de agua": ${vectorialContieneCambioAgua ? 'S√ç' : 'NO'}`);
        
        if (vectorialContiene9000) {
            console.log('‚úÖ [TEST] ¬°La b√∫squeda vectorial espec√≠fica encontr√≥ la informaci√≥n!');
        } else {
            console.log('‚ùå [TEST] La b√∫squeda vectorial espec√≠fica tampoco encontr√≥ la informaci√≥n');
        }
        
    } catch (error) {
        console.error('‚ùå [TEST] Error en el test:', error);
    }
}

// Ejecutar el test
testBusquedaLavado(); 